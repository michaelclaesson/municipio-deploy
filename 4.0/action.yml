name: Municipio Deploy 4.0
description: Centralized deploy Action for municipio based sites in Helsingborg stad.
inputs:
  deploy-host:
    description: Deployment host domain or ip.
    required: true
  deploy-port:
    description: Deployment host ssh port.
    default: 22
    required: false
  deploy-host-path:
    description: Deployment path on server.
    required: true
  deploy-host-backup-path:
    description: Backup path for changed and deleted files after rsync deploy.
    required: true
  deploy-host-user:
    description: Username of the rsync deployment.
    required: true
  deploy-host-user-key: 
    description: The ssh key of the user deploying through rsync.
    required: true
  deploy-host-web-server-user:
    description: Host web server user that should own the files.
    required: true
  deploy-host-pagecache-path:
    description: The path for LS PageCache. If set, files in here will be deleted.
    required: false
    default: ""
  kill-lsphp:
    description: Whether or not to kill all LSPHP processes.
    required: false
    default: false
  github-token:
    description: Github token for npm package retrieval.
    required: true
  acf-url:
    description: ACF download url.
    required: true
  php-version:
    description: PHP Version
    default: 8.2
    required: false
  skip-preflight:
    description: If the preflight should be skipped
    default: false
    required: false
  newrelic-app-id:
    description: App ID for deployment tracking with newrelic
    default: ""
    required: false
  newrelic-api-key:
    description: API Key for deployment tracking with newrelic
    default: ""
    required: false
  sentry-url:
    description: Base url to sentry instance
    default: ""
    required: false
  sentry-org:
    description: The Organization Slug the project is at
    default: ""
    required: false
  sentry-version:
    description: The version identifier of the release to track the deploy for. 
    default: ""
    required: false
  sentry-api-key:
    description: The API key to use with sentry
    default: ""
    required: false
  sentry-env:
    description: The enviroment to track the deploy for
    default: ""
    required: false

runs:
  using: composite
  steps:
    - name: Test - Check SSH connectivity
      uses: appleboy/ssh-action@v1.1.0
      if: ${{ inputs.skip-preflight == false }}
      with:
        host: ${{ inputs.deploy-host }}
        username: ${{ inputs.deploy-host-user }}
        key: ${{ inputs.deploy-host-user-key }}
        port: ${{ inputs.deploy-port }}
        script: echo "Hello World from deploy!"

    - name: Test - Create test file
      uses: appleboy/ssh-action@v1.1.0
      if: ${{ inputs.skip-preflight == false }}
      with:
        host: ${{ inputs.deploy-host }}
        username: ${{ inputs.deploy-host-user }}
        key: ${{ inputs.deploy-host-user-key }}
        port: ${{ inputs.deploy-port }}
        script: touch testfile.txt

    - name: Test - Change group of test file
      uses: appleboy/ssh-action@v1.1.0
      if: ${{ inputs.skip-preflight == false }}
      with:
        host: ${{ inputs.deploy-host }}
        username: ${{ inputs.deploy-host-user }}
        key: ${{ inputs.deploy-host-user-key }}
        port: ${{ inputs.deploy-port }}
        script: chgrp litespeed testfile.txt

    - name: Test - Change permissions of test file
      uses: appleboy/ssh-action@v1.1.0
      if: ${{ inputs.skip-preflight == false }}
      with:
        host: ${{ inputs.deploy-host }}
        username: ${{ inputs.deploy-host-user }}
        key: ${{ inputs.deploy-host-user-key }}
        port: ${{ inputs.deploy-port }}
        script: chmod 644 testfile.txt

    - name: Test - Manipulate existing file
      uses: appleboy/ssh-action@v1.1.0
      if: ${{ inputs.skip-preflight == false }}
      with:
        host: ${{ inputs.deploy-host }}
        username: ${{ inputs.deploy-host-user }}
        key: ${{ inputs.deploy-host-user-key }}
        port: ${{ inputs.deploy-port }}
        script: |
          cp -p testfile.txt testfile.remove.txt
          rm testfile.remove.txt

    - name: Test - Delete test file
      uses: appleboy/ssh-action@v1.1.0
      if: ${{ inputs.skip-preflight == false }}
      with:
        host: ${{ inputs.deploy-host }}
        username: ${{ inputs.deploy-host-user }}
        key: ${{ inputs.deploy-host-user-key }}
        port: ${{ inputs.deploy-port }}
        script: rm testfile.txt

    - name: Test - Check disk space
      uses: appleboy/ssh-action@v1.1.0
      if: ${{ inputs.skip-preflight == false }}
      with:
        host: ${{ inputs.deploy-host }}
        username: ${{ inputs.deploy-host-user }}
        key: ${{ inputs.deploy-host-user-key }}
        port: ${{ inputs.deploy-port }}
        script: df -h | grep -vE "^Filesystem|tmpfs|cdrom" | awk "{ print \$4 }" | sed "s/G//" | awk "{ sum += \$1 } END { if (sum >= 1) { print \"Disk space is sufficient\" } else { print \"Insufficient disk space\"; exit 1 } }"

    - name: Test - Check php version
      uses: appleboy/ssh-action@v1.1.0
      if: ${{ inputs.skip-preflight == false }}
      with:
        host: ${{ inputs.deploy-host }}
        username: ${{ inputs.deploy-host-user }}
        key: ${{ inputs.deploy-host-user-key }}
        port: ${{ inputs.deploy-port }}
        script: |
          output=$(php -v | tac | tail -n 1 | cut -d " " -f 2 | cut -c 1-3)
          if [ "$output" = "${{ inputs.php-version }}" ]; then
            echo "PHP version matches the expected version."
          else
            echo "PHP Version does not match the expected version."
            exit 1
          fi

    - uses: actions/setup-node@v3
      with:
        node-version: 20.19.1

    - name: Setup PHP with composer v2.
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ inputs.php-version }}
        tools: composer:v2
      env:
        COMPOSER_TOKEN: ${{ inputs.github-token }}

    - name: Get Composer Cache Directory.
      id: composer-cache
      run: |
        echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      shell: bash

    - name: Cache composer packages.
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Cache node modules.
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-

    - name: Validate composer.json and composer.lock.
      run: composer validate
      shell: bash

    - name: Install composer dependencies.
      run: composer install --prefer-dist --no-progress --no-suggest --optimize-autoloader --classmap-authoritative
      shell: bash

    - name: Write composer versions info file.
      run: composer show >> composer.versions.md
      shell: bash

    - name: Inject access token in .npmrc.
      run: | 
        echo "@helsingborg-stad:registry=https://npm.pkg.github.com/helsingborg-stad" >> ~/.npmrc
        echo "//npm.pkg.github.com/:_authToken=${{ inputs.github-token }}" >> ~/.npmrc
      shell: bash

    - name: Get ACF
      run: |
        wget "${{ inputs.acf-url }}" -O acf.zip
        unzip acf.zip -d wp-content/plugins/
        rm acf.zip
      shell: bash

    - name: Execute buildscripts in themes and plugins folders.
      run: php ./build.php --cleanup --no-composer-in-child-packages --install-npm
      shell: bash